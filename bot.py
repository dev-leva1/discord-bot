import discord
from discord import app_commands
from discord.ext import commands
import json
import leveling_system
from datetime import datetime
from moderation import Moderation
from welcome import Welcome
from roles import RoleRewards
from automod import AutoMod
from logging_system import LoggingSystem
from image_generator import ImageGenerator
import os
from dotenv import load_dotenv

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

class Bot(commands.Bot):
    def __init__(self):
        super().__init__(command_prefix='!', intents=intents)
        self.moderation = Moderation(self)
        self.welcome = Welcome(self)
        self.role_rewards = RoleRewards(self)
        self.leveling = leveling_system.init_leveling(self)
        self.automod = AutoMod(self)
        self.logging = LoggingSystem(self)
        self.image_generator = ImageGenerator()
        
    async def setup_hook(self):
        await self.moderation.setup()
        await self.welcome.setup()
        await self.role_rewards.setup()
        await self.automod.setup()
        await self.logging.setup()
        await self.tree.sync()
        
bot = Bot()

@bot.event
async def on_ready():
    print(f'{bot.user} –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    print('Slash-–∫–æ–º–∞–Ω–¥—ã:')
    print('/rank - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à —É—Ä–æ–≤–µ–Ω—å')
    print('/leaderboard - –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤')
    print('/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥')
    print('/ban - –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    print('/kick - –í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    print('/mute - –ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    print('/clear - –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è')
    print('/setwelcome - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π')
    print('/addrole - –î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å')
    print('/removerole - –£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å')
    print('/listroles - –°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –∑–∞ —É—Ä–æ–≤–Ω–∏')
    print('/automod - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏–∏')
    print('/setlogs - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤')

@bot.event
async def on_message(message):
    if message.author.bot:
        return
        
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏–∏ (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å–µ—Ä–≤–µ—Ä–∞)
    if message.author.id != message.guild.owner_id:
        if not await bot.automod.check_message(message):
            return
        
    await leveling_system.add_experience(message.author.id, message.guild.id)
    await bot.process_commands(message)

@bot.event
async def on_message_delete(message):
    await bot.logging.log_message_delete(message)

@bot.event
async def on_message_edit(before, after):
    await bot.logging.log_message_edit(before, after)

@bot.event
async def on_member_join(member):
    await bot.logging.log_member_join(member)
    await bot.welcome.send_welcome(member)

@bot.event
async def on_member_remove(member):
    await bot.logging.log_member_remove(member)

@bot.event
async def on_member_update(before, after):
    await bot.logging.log_member_update(before, after)

@bot.event
async def on_voice_state_update(member, before, after):
    await bot.logging.log_voice_state_update(member, before, after)

@bot.event
async def on_member_ban(guild, user):
    await bot.logging.log_ban(guild, user)

@bot.event
async def on_member_unban(guild, user):
    await bot.logging.log_unban(guild, user)

# Slash –∫–æ–º–∞–Ω–¥—ã
@bot.tree.command(name="rank", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∏ –æ–ø—ã—Ç")
async def rank(interaction: discord.Interaction):
    level, xp = await leveling_system.get_level_xp(interaction.user.id, interaction.guild.id)
    next_level_xp = bot.leveling.get_xp_for_level(level)
    
    # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É
    rank_card = await bot.image_generator.create_rank_card(
        interaction.user,
        level,
        xp,
        next_level_xp
    )
    
    await interaction.response.send_message(file=rank_card)

@bot.tree.command(name="leaderboard", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—è–º")
async def leaderboard(interaction: discord.Interaction):
    leaders_data = await leveling_system.get_leaderboard(interaction.guild.id)
    
    if not leaders_data:
        await interaction.response.send_message("–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –æ–ø—ã—Ç–æ–º!", ephemeral=True)
        return
        
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    leaders = []
    for data in leaders_data:
        user = interaction.guild.get_member(int(data["user_id"]))
        if user:
            leaders.append((user, data["level"], data["xp"]))
            
    # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞
    leaderboard_card = await bot.image_generator.create_leaderboard_card(
        interaction.guild.name,
        leaders
    )
    
    await interaction.response.send_message(file=leaderboard_card)

@bot.tree.command(name="help", description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥")
async def help(interaction: discord.Interaction):
    embed = discord.Embed(
        title="üìö –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º",
        description="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:",
        color=discord.Color.blue()
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    is_owner = interaction.guild.owner_id == interaction.user.id
    show_admin_commands = is_owner or interaction.user.guild_permissions.administrator
    show_mod_commands = show_admin_commands or interaction.user.guild_permissions.ban_members
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–º)
    embed.add_field(
        name="üìä –£—Ä–æ–≤–Ω–∏ –∏ –æ–ø—ã—Ç", 
        value="""
‚Ä¢ `/rank` - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∏ –æ–ø—ã—Ç
‚Ä¢ `/leaderboard` - –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
        """, 
        inline=False
    )
    
    # –ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    if show_mod_commands:
        embed.add_field(
            name="üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ü–∏—è",
            value="""
‚Ä¢ `/ban` - –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ `/kick` - –í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ `/mute` - –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ `/clear` - –û—á–∏—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ
            """,
            inline=False
        )
        
    # –ö–æ–º–∞–Ω–¥—ã –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏–∏
    if show_admin_commands:
        embed.add_field(
            name="ü§ñ –ê–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏—è",
            value="""
‚Ä¢ `/automod addword` - –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
‚Ä¢ `/automod removeword` - –£–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
‚Ä¢ `/automod listwords` - –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
‚Ä¢ `/automod setspam` - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Ä–æ–≥ —Å–ø–∞–º–∞
‚Ä¢ `/automod setinterval` - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–ø–∞–º–∞
‚Ä¢ `/automod setmentions` - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
‚Ä¢ `/automod setwarnings` - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–∫—Å–∏–º—É–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
‚Ä¢ `/automod setmute` - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞
            """,
            inline=False
        )
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
    if show_admin_commands:
        embed.add_field(
            name="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞",
            value="""
‚Ä¢ `/setwelcome` - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π
‚Ä¢ `/setlogs` - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤
            """,
            inline=False
        )
        
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–µ–π
    if show_admin_commands:
        embed.add_field(
            name="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏",
            value="""
‚Ä¢ `/addrole` - –î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å-–Ω–∞–≥—Ä–∞–¥—É –∑–∞ —É—Ä–æ–≤–µ–Ω—å
‚Ä¢ `/removerole` - –£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å-–Ω–∞–≥—Ä–∞–¥—É
‚Ä¢ `/listroles` - –°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π-–Ω–∞–≥—Ä–∞–¥ –∑–∞ —É—Ä–æ–≤–Ω–∏
            """,
            inline=False
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∞—Ö
    if is_owner:
        embed.set_footer(text="üëë –ü–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã (–≤—ã –≤–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞)")
    elif not show_admin_commands:
        embed.set_footer(text="‚ÑπÔ∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–∫—Ä—ã—Ç—ã, —Ç–∞–∫ –∫–∞–∫ —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
    
    await interaction.response.send_message(embed=embed)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
TOKEN = os.getenv('DISCORD_TOKEN')
bot.run(TOKEN) 